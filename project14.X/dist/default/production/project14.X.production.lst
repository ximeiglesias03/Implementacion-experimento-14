

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 22 15:53:07 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     008F                     OSCCON          equ	143	;# 
    98     0090                     OSCTUNE         equ	144	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0093                     SSPMSK          equ	147	;# 
   103     0093                     MSK             equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0095                     WPUB            equ	149	;# 
   106     0096                     IOCB            equ	150	;# 
   107     0097                     VRCON           equ	151	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009A                     SPBRGH          equ	154	;# 
   111     009B                     PWM1CON         equ	155	;# 
   112     009C                     ECCPAS          equ	156	;# 
   113     009D                     PSTRCON         equ	157	;# 
   114     009E                     ADRESL          equ	158	;# 
   115     009F                     ADCON1          equ	159	;# 
   116     0105                     WDTCON          equ	261	;# 
   117     0107                     CM1CON0         equ	263	;# 
   118     0108                     CM2CON0         equ	264	;# 
   119     0109                     CM2CON1         equ	265	;# 
   120     010C                     EEDATA          equ	268	;# 
   121     010C                     EEDAT           equ	268	;# 
   122     010D                     EEADR           equ	269	;# 
   123     010E                     EEDATH          equ	270	;# 
   124     010F                     EEADRH          equ	271	;# 
   125     0185                     SRCON           equ	389	;# 
   126     0187                     BAUDCTL         equ	391	;# 
   127     0188                     ANSEL           equ	392	;# 
   128     0189                     ANSELH          equ	393	;# 
   129     018C                     EECON1          equ	396	;# 
   130     018D                     EECON2          equ	397	;# 
   131     0000                     INDF            equ	0	;# 
   132     0001                     TMR0            equ	1	;# 
   133     0002                     PCL             equ	2	;# 
   134     0003                     STATUS          equ	3	;# 
   135     0004                     FSR             equ	4	;# 
   136     0005                     PORTA           equ	5	;# 
   137     0006                     PORTB           equ	6	;# 
   138     0007                     PORTC           equ	7	;# 
   139     0008                     PORTD           equ	8	;# 
   140     0009                     PORTE           equ	9	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000D                     PIR2            equ	13	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0011                     TMR2            equ	17	;# 
   150     0012                     T2CON           equ	18	;# 
   151     0013                     SSPBUF          equ	19	;# 
   152     0014                     SSPCON          equ	20	;# 
   153     0015                     CCPR1           equ	21	;# 
   154     0015                     CCPR1L          equ	21	;# 
   155     0016                     CCPR1H          equ	22	;# 
   156     0017                     CCP1CON         equ	23	;# 
   157     0018                     RCSTA           equ	24	;# 
   158     0019                     TXREG           equ	25	;# 
   159     001A                     RCREG           equ	26	;# 
   160     001B                     CCPR2           equ	27	;# 
   161     001B                     CCPR2L          equ	27	;# 
   162     001C                     CCPR2H          equ	28	;# 
   163     001D                     CCP2CON         equ	29	;# 
   164     001E                     ADRESH          equ	30	;# 
   165     001F                     ADCON0          equ	31	;# 
   166     0081                     OPTION_REG      equ	129	;# 
   167     0085                     TRISA           equ	133	;# 
   168     0086                     TRISB           equ	134	;# 
   169     0087                     TRISC           equ	135	;# 
   170     0088                     TRISD           equ	136	;# 
   171     0089                     TRISE           equ	137	;# 
   172     008C                     PIE1            equ	140	;# 
   173     008D                     PIE2            equ	141	;# 
   174     008E                     PCON            equ	142	;# 
   175     008F                     OSCCON          equ	143	;# 
   176     0090                     OSCTUNE         equ	144	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0093                     SSPMSK          equ	147	;# 
   181     0093                     MSK             equ	147	;# 
   182     0094                     SSPSTAT         equ	148	;# 
   183     0095                     WPUB            equ	149	;# 
   184     0096                     IOCB            equ	150	;# 
   185     0097                     VRCON           equ	151	;# 
   186     0098                     TXSTA           equ	152	;# 
   187     0099                     SPBRG           equ	153	;# 
   188     009A                     SPBRGH          equ	154	;# 
   189     009B                     PWM1CON         equ	155	;# 
   190     009C                     ECCPAS          equ	156	;# 
   191     009D                     PSTRCON         equ	157	;# 
   192     009E                     ADRESL          equ	158	;# 
   193     009F                     ADCON1          equ	159	;# 
   194     0105                     WDTCON          equ	261	;# 
   195     0107                     CM1CON0         equ	263	;# 
   196     0108                     CM2CON0         equ	264	;# 
   197     0109                     CM2CON1         equ	265	;# 
   198     010C                     EEDATA          equ	268	;# 
   199     010C                     EEDAT           equ	268	;# 
   200     010D                     EEADR           equ	269	;# 
   201     010E                     EEDATH          equ	270	;# 
   202     010F                     EEADRH          equ	271	;# 
   203     0185                     SRCON           equ	389	;# 
   204     0187                     BAUDCTL         equ	391	;# 
   205     0188                     ANSEL           equ	392	;# 
   206     0189                     ANSELH          equ	393	;# 
   207     018C                     EECON1          equ	396	;# 
   208     018D                     EECON2          equ	397	;# 
   209     001D                     _CCP2CONbits    set	29
   210     001B                     _CCPR2L         set	27
   211     001D                     _CCP2CON        set	29
   212     0012                     _T2CON          set	18
   213     0007                     _PORTC          set	7
   214     001E                     _ADRESH         set	30
   215     001F                     _ADCON0bits     set	31
   216     0092                     _PR2            set	146
   217     0087                     _TRISC          set	135
   218     009E                     _ADRESL         set	158
   219     009F                     _ADCON1bits     set	159
   220     0189                     _ANSELH         set	393
   221     0188                     _ANSEL          set	392
   222                           
   223                           	psect	cinit
   224     07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227     07FC                     __initialization:
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_main:
   238     0070                     ?_ADC_Read:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 2 bytes @ 0x0
   243     0070                     	ds	2
   244     0072                     ??_ADC_Read:
   245                           
   246                           ; 1 bytes @ 0x2
   247     0072                     	ds	1
   248     0073                     ??_main:
   249                           
   250                           ; 1 bytes @ 0x3
   251     0073                     	ds	2
   252     0075                     main@ADCResult:
   253                           
   254                           ; 2 bytes @ 0x5
   255     0075                     	ds	2
   256                           
   257                           	psect	maintext
   258     07B4                     __pmaintext:	
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 33 in file "project14.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  ADCResult       2    5[COMMON] unsigned int 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, pclath, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : B00/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         0       0       0       0       0
   279 ;;      Locals:         2       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0
   281 ;;      Totals:         4       0       0       0       0
   282 ;;Total ram usage:        4 bytes
   283 ;; Hardware stack levels required when called: 1
   284 ;; This function calls:
   285 ;;		_ADC_Read
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291     07B4                     _main:	
   292                           ;psect for function _main
   293                           
   294     07B4                     l640:	
   295                           ;incstack = 0
   296                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   297                           
   298                           
   299                           ;project14.c: 34:         CCP2CONbits.DC2B1 = (ADCResult & 0x02) ? 1 : 0;
   300     07B4  1683               	bsf	3,5	;RP0=1, select bank1
   301     07B5  1303               	bcf	3,6	;RP1=0, select bank1
   302     07B6  0187               	clrf	7	;volatile
   303                           
   304                           ;project14.c: 35: 
   305     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   306     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   307     07B9  0187               	clrf	7	;volatile
   308     07BA                     l642:
   309                           
   310                           ;project14.c: 38: }
   311     07BA  303F               	movlw	63
   312     07BB  1683               	bsf	3,5	;RP0=1, select bank1
   313     07BC  1303               	bcf	3,6	;RP1=0, select bank1
   314     07BD  0092               	movwf	18	;volatile
   315     07BE                     l644:
   316     07BE  3004               	movlw	4
   317     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   318     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   319     07C1  0092               	movwf	18	;volatile
   320     07C2                     l646:
   321     07C2  300F               	movlw	15
   322     07C3  009D               	movwf	29	;volatile
   323     07C4                     l648:
   324     07C4  120A  118A  2793  120A  118A  	fcall	_ADC_Read
   325     07C9  0871               	movf	?_ADC_Read+1,w
   326     07CA  00F6               	movwf	main@ADCResult+1
   327     07CB  0870               	movf	?_ADC_Read,w
   328     07CC  00F5               	movwf	main@ADCResult
   329     07CD                     l650:
   330     07CD  0876               	movf	main@ADCResult+1,w
   331     07CE  00F4               	movwf	??_main+1
   332     07CF  0875               	movf	main@ADCResult,w
   333     07D0  00F3               	movwf	??_main
   334     07D1  1003               	clrc
   335     07D2  0CF4               	rrf	??_main+1,f
   336     07D3  0CF3               	rrf	??_main,f
   337     07D4  1003               	clrc
   338     07D5  0CF4               	rrf	??_main+1,f
   339     07D6  0CF3               	rrf	??_main,f
   340     07D7  0873               	movf	??_main,w
   341     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   342     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   343     07DA  009B               	movwf	27	;volatile
   344     07DB                     l652:
   345     07DB  1875               	btfsc	main@ADCResult,0
   346     07DC  2FDE               	goto	u71
   347     07DD  2FE2               	goto	u70
   348     07DE                     u71:
   349     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   350     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   351     07E0  161D               	bsf	29,4	;volatile
   352     07E1  2FE5               	goto	u84
   353     07E2                     u70:
   354     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   355     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   356     07E4  121D               	bcf	29,4	;volatile
   357     07E5                     u84:
   358     07E5                     l654:
   359     07E5  18F5               	btfsc	main@ADCResult,1
   360     07E6  2FE8               	goto	u91
   361     07E7  2FEC               	goto	u90
   362     07E8                     u91:
   363     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   364     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   365     07EA  169D               	bsf	29,5	;volatile
   366     07EB  2FEF               	goto	u104
   367     07EC                     u90:
   368     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   369     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   370     07EE  129D               	bcf	29,5	;volatile
   371     07EF                     u104:
   372     07EF                     l656:
   373     07EF  300D               	movlw	13
   374     07F0  00F4               	movwf	??_main+1
   375     07F1  30FB               	movlw	251
   376     07F2  00F3               	movwf	??_main
   377     07F3                     u117:
   378     07F3  0BF3               	decfsz	??_main,f
   379     07F4  2FF3               	goto	u117
   380     07F5  0BF4               	decfsz	??_main+1,f
   381     07F6  2FF3               	goto	u117
   382     07F7  2FF8               	nop2
   383     07F8  2FC4               	goto	l648
   384     07F9  120A  118A  2800   	ljmp	start
   385     07FC                     __end_of_main:
   386                           
   387                           	psect	text1
   388     0793                     __ptext1:	
   389 ;; *************** function _ADC_Read *****************
   390 ;; Defined at:
   391 ;;		line 15 in file "project14.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  2    0[COMMON] unsigned int 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         2       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0
   408 ;;      Totals:         3       0       0       0       0
   409 ;;Total ram usage:        3 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418     0793                     _ADC_Read:	
   419                           ;psect for function _ADC_Read
   420                           
   421     0793                     l622:	
   422                           ;incstack = 0
   423                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   424                           
   425                           
   426                           ;project14.c: 16: }
   427     0793  1283               	bcf	3,5	;RP0=0, select bank0
   428     0794  1303               	bcf	3,6	;RP1=0, select bank0
   429     0795  081F               	movf	31,w	;volatile
   430     0796  39C3               	andlw	-61
   431     0797  380C               	iorlw	12
   432     0798  009F               	movwf	31	;volatile
   433     0799                     l624:
   434                           
   435                           ;project14.c: 17: 
   436     0799  141F               	bsf	31,0	;volatile
   437     079A                     l626:
   438                           
   439                           ;project14.c: 20:     TRISC = 0x00;
   440     079A  3008               	movlw	8
   441     079B  1683               	bsf	3,5	;RP0=1, select bank3
   442     079C  1703               	bsf	3,6	;RP1=1, select bank3
   443     079D  0088               	movwf	8	;volatile
   444     079E                     l628:
   445                           
   446                           ;project14.c: 21:     PORTC = 0x00;
   447     079E  0189               	clrf	9	;volatile
   448     079F                     l630:
   449                           
   450                           ;project14.c: 23: 
   451     079F  1683               	bsf	3,5	;RP0=1, select bank1
   452     07A0  1303               	bcf	3,6	;RP1=0, select bank1
   453     07A1  179F               	bsf	31,7	;volatile
   454     07A2                     l632:
   455                           
   456                           ;project14.c: 24:     PR2 = 0x3F;
   457     07A2  3008               	movlw	8
   458     07A3  00F2               	movwf	??_ADC_Read
   459     07A4                     u127:
   460     07A4  0BF2               	decfsz	??_ADC_Read,f
   461     07A5  2FA4               	goto	u127
   462     07A6                     l634:
   463                           
   464                           ;project14.c: 26:     CCP2CON = 0x0F;
   465     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   466     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   467     07A8  149F               	bsf	31,1	;volatile
   468     07A9                     l31:	
   469                           ;project14.c: 27: 
   470                           
   471     07A9  189F               	btfsc	31,1	;volatile
   472     07AA  2FAC               	goto	u61
   473     07AB  2FAD               	goto	u60
   474     07AC                     u61:
   475     07AC  2FA9               	goto	l31
   476     07AD                     u60:
   477     07AD                     l636:
   478                           
   479                           ;project14.c: 29:         unsigned int ADCResult = ADC_Read();
   480     07AD  081E               	movf	30,w	;volatile
   481     07AE  00F1               	movwf	?_ADC_Read+1
   482     07AF  1683               	bsf	3,5	;RP0=1, select bank1
   483     07B0  1303               	bcf	3,6	;RP1=0, select bank1
   484     07B1  081E               	movf	30,w	;volatile
   485     07B2  00F0               	movwf	?_ADC_Read
   486     07B3                     l34:
   487     07B3  0008               	return
   488     07B4                     __end_of_ADC_Read:
   489     0002                     ___latbits      equ	2
   490     007E                     btemp           set	126	;btemp
   491     007E                     wtemp0          set	126
   492                           
   493                           	psect	config
   494                           
   495                           ;Config register CONFIG1 @ 0x2007
   496                           ;	Oscillator Selection bits
   497                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   498                           ;	Watchdog Timer Enable bit
   499                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   500                           ;	Power-up Timer Enable bit
   501                           ;	PWRTE = ON, PWRT enabled
   502                           ;	RE3/MCLR pin function select bit
   503                           ;	MCLRE = 0x1, unprogrammed default
   504                           ;	Code Protection bit
   505                           ;	CP = OFF, Program memory code protection is disabled
   506                           ;	Data Code Protection bit
   507                           ;	CPD = OFF, Data memory code protection is disabled
   508                           ;	Brown Out Reset Selection bits
   509                           ;	BOREN = ON, BOR enabled
   510                           ;	Internal External Switchover bit
   511                           ;	IESO = 0x1, unprogrammed default
   512                           ;	Fail-Safe Clock Monitor Enabled bit
   513                           ;	FCMEN = 0x1, unprogrammed default
   514                           ;	Low Voltage Programming Enable bit
   515                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   516                           ;	In-Circuit Debugger Mode bit
   517                           ;	DEBUG = 0x1, unprogrammed default
   518     2007                     	org	8199
   519     2007  2FE1               	dw	12257
   520                           
   521                           ;Config register CONFIG2 @ 0x2008
   522                           ;	Brown-out Reset Selection bit
   523                           ;	BOR4V = 0x1, unprogrammed default
   524                           ;	Flash Program Memory Self Write Enable bits
   525                           ;	WRT = OFF, Write protection off
   526     2008                     	org	8200
   527     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      67
                                              3 COMMON     4     4      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 22 15:53:07 2025

                     l31 07A9                       l34 07B3                       u60 07AD  
                     u61 07AC                       u70 07E2                       u71 07DE  
                     u90 07EC                       u91 07E8                       u84 07E5  
                    l630 079F                      l622 0793                      l632 07A2  
                    l624 0799                      l640 07B4                      l634 07A6  
                    l626 079A                      l650 07CD                      l642 07BA  
                    l636 07AD                      l628 079E                      l652 07DB  
                    l644 07BE                      l654 07E5                      l646 07C2  
                    l656 07EF                      l648 07C4                      u104 07EF  
                    u117 07F3                      u127 07A4                      _PR2 0092  
                   _main 07B4                     btemp 007E         __end_of_ADC_Read 07B4  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _T2CON 0012                    _PORTC 0007                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0073                   _ADRESH 001E  
                 _ADRESL 009E                   _CCPR2L 001B                   _ANSELH 0189  
              ?_ADC_Read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             ??_ADC_Read 0072               __pmaintext 07B4                  _CCP2CON 001D  
                __ptext1 0793     end_of_initialization 07FC              _CCP2CONbits 001D  
    start_initialization 07FC                ___latbits 0002                 _ADC_Read 0793  
             _ADCON0bits 001F               _ADCON1bits 009F            main@ADCResult 0075  
